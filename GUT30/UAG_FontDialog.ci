/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//	
// 	FILE:	UAG_Fontdialog.ci
//
//	Beschreibung:
//
//		Enthält Funktionen für das ändern der Tooltip Fonts zur Laufzeit.
//		Funktionen mit Version 3. sind freigegeben
//
//
//	Autor:				Jacky Lang
//	Erstellungsdatum:	00.10.00	/	Schneider Electrik GmbH
//	Version				75.33.11.03
//
//	PUBLIC FUNCTIONS:
//
//			UAG_FontForm()
//			UAG_FontDefault()

//	Historie:
//	geändert am	Autor		Kurzbeschreibung der Änderung		Referenz (optional)

// 	16.10.09 	Steiner 	angepasst an die Toolbox

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// MODULE VARIABLES

STRING m_sFontName = "Arial";
STRING m_sFontAttribs = "B";
INT m_nFontSize = 14;


//	UAG_FontForm()
//	Übergabeparameter:	-
//                         
//	Rückgabewert:		---
//	Beschreibung:		
//              This FUNCTION creates an interface form TO change tool tip font AND Toggle 
//              tool tip display at runtime.
//
//	Autor:				Jacky Lang
//	Erstellungsdatum:	01.10.00	/	Schneider Electrik GmbH
//	Version				3.1.1.6
//
//	Historie:
//	geändert am	Autor		Kurzbeschreibung der Änderung		Referenz (optional)
//
//  16.11.09 Steiner		Übersetzt und speichern in der Ini eingefügt.


FUNCTION UAG_FontForm()

INT hForm;
INT errRead;
INT nTemp;
STRING sBold;
STRING sItalic;
STRING sFontName;
STRING sFontSize;
STRING sUnderline;
STRING sShowToolTips;

	IF m_nFontSize = 0 THEN
		UAG_FontDefault();
	END
        hForm = FormNew("@(Tool tip setting)", 31, 5, 25);
    	FormPrompt(0 ,0, "Font Name:");
    	FormComboBox(11 ,0, 20, 5, sFontName, 1);
    	FormAddList("Arial");
    	FormAddList("Courier");
    	FormAddList("MS Sans Serif");
    	FormAddList("Symbol");
    	FormAddList("Terminal");
    	FormAddList("Times New Roman");
		sFontSize = IntToStr (m_nFontSize);
    	FormPrompt(14 ,1, "@(Size): ");
    	FormComboBox(20 ,1, 11, 5, sFontSize, 1);
    	FormAddList("8");
    	FormAddList("9");
    	FormAddList("10");
    	FormAddList("11");
    	FormAddList("12");
    	FormAddList("14");
    	FormAddList("16");
    	FormAddList("22");
    	FormAddList("24");
    	FormAddList("26");
    	FormAddList("28");
    	FormAddList("36");
    	FormAddList("48");
    	FormAddList("72");

        FormCheckBox(0, 1, "@(Bold)", sBold);
        FormCheckBox(0, 2, "@(Italic)", sItalic);
        FormCheckBox(0, 3, "@(Underline)", sUnderline);
        FormCheckBox(15, 3, "@(Tool Tips visible)", sShowToolTips);
	FormButton(4, 4, "   @(OK)  ", 0, 1);
	FormButton(19, 4, " @(Cancel) ", 0, 2);
	IF StrSearch(0, m_sFontAttribs, "B") > -1 THEN
		sBold = "1"
	END
	IF StrSearch(0, m_sFontAttribs, "I") > -1 THEN
		sItalic = "1"; 
	END
	IF StrSearch(0, m_sFontAttribs, "U") > -1 THEN
		sUnderline = "1"; 
	END
	sFontName = m_sFontName;
	sShowToolTips = IntToStr(DspTipMode(3));
	sFontSize = IntToStr(m_nFontSize);	
 	errRead = FormRead(0);
	IF errRead = 0 Then
		IF sFontName <> "" THEN
			m_sFontName = sFontName;
		ELSE
			m_sFontName = "MS Sans Serif";
		END
		sShowToolTips = DspTipMode(StrToInt(sShowToolTips));
		nTemp = StrToInt(sFontSize);
		IF nTemp > 0 AND nTemp <= 72 THEN
			m_nFontSize = nTemp;
		END
		m_sFontAttribs = "";
		IF sBold = "1" THEN
			m_sFontAttribs = m_sFontAttribs + "B";
		END
		IF sItalic = "1" THEN
			m_sFontAttribs = m_sFontAttribs + "I";
		END
		IF sUnderline = "1" THEN
			m_sFontAttribs = m_sFontAttribs + "U";
		END
		DspSetTooltipFont(m_sFontName, m_nFontSize, m_sFontAttribs);
		ParameterPut ("Animator","ToolTipFont",m_sFontName +"," +IntToStr( m_nFontSize) +"," + m_sFontAttribs);
	END



END

//	UAG_FontDefault()
//	Übergabeparameter:	-
//                         
//	Rückgabewert:		---
//	Beschreibung:		Funktion wird bei Bildwechsel und bei Start des Systems ausgeführt.

//
//	Autor:				Jacky Lang
//	Erstellungsdatum:	01.10.00	/	Schneider Electrik GmbH
//	Version				3.1.1.6
//
//	Historie:
//	geändert am	Autor		Kurzbeschreibung der Änderung		Referenz (optional)
//
//  16.11.09 Steiner		.


FUNCTION UAG_FontDefault()
STRING sFontSetting;
STRING sTemp;
INT nPos1;
INT nPos2;
INT nTemp;

	m_nFontSize = 14;
	sFontSetting = ParameterGet("Animator","ToolTipFont", "");
	IF sFontSetting <> "" THEN
		nPos1 = StrSearch(0, sFontSetting, ",");
		IF nPos1 >= 0 THEN
			sTemp = StrLeft(sFontSetting, nPos1);
			IF sTemp <> "" THEN m_sFontName = sTemp; END
			nPos2 = StrSearch(nPos1 + 1 , sFontSetting, ",");
			IF nPos2 < nPos1 THEN nPos2 = StrLength(sFontSetting); END
			IF nPos2 > nPos1 THEN
				nTemp = StrToInt(StrMid(sFontSetting,nPos1 + 1,nPos2 - nPos1 -1));
				IF nTemp > 0 AND nTemp <=72 THEN 
					m_nFontSize = nTemp;
				END
				nPos1 = StrLength(sFontSetting);
				m_sFontAttribs = StrRight(sFontSetting, nPos1 - nPos2 - 1);
			END
		ELSE
		m_sFontName = sFontSetting;
		END
	END
	DspSetTooltipFont(m_sFontName, m_nFontSize, m_sFontAttribs);
END